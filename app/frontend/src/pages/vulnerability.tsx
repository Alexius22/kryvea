import { mdiFileEdit } from "@mdi/js";
import Head from "next/head";
import type { ReactElement } from "react";
import Button from "../components/Button";
import CardBox from "../components/CardBox";
import SectionMain from "../components/Section/Main";
import SectionTitleLineWithButton from "../components/Section/TitleLineWithButton";
import { getPageTitle } from "../config";
import LayoutAuthenticated from "../layouts/Authenticated";
import CardBoxComponentTitle from "../components/CardBox/Component/Title";

const VulnDetailPage = () => {
  return (
    <>
      <Head>
        <title>{getPageTitle("Vulnerability detail")}</title>
      </Head>

      <SectionMain>
        <SectionTitleLineWithButton icon={undefined} title="Vuln name" main>
          <Button icon={mdiFileEdit} label="Edit PoC" roundedFull small color="contrast" href="/edit_poc" />
        </SectionTitleLineWithButton>

        <CardBox className="flex mb-6" hasTable>
          <table className="table-fixed">
            <thead>
              <tr>
                <th className="text-center">Severity</th>
                <th className="text-center">Host</th>
                <th className="text-center">User</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td className="text-center">Critical</td>
                <td className="text-center">127.0.0.1 - example-site-looooooooooooooong.com</td>
                <td className="text-center">Test</td>
              </tr>
            </tbody>
          </table>
        </CardBox>

        <CardBox className="flex mb-6" hasTable>
          <table className="table-auto">
            <tbody>
              <tr className="">
                <td>
                  <th>Generic description</th>
                </td>
                <td>
                  Questa vulnerabilità si verifica quando l'applicazione utilizzata componenti di terzi parti obsoleti
                  e/o affetti da vulnerabilità note. Componenti quali librerie, framework e altri moduli software sono
                  quasi sempre eseguiti con i privilegi più alti. Sfruttando un componente vulnerabile, un attaccante
                  potrebbe ottenere dei dati o accedere al server. Le applicazioni che utilizzano componenti con
                  vulnerabilità note possono minare le loro difese agevolando molte tipologie di attacco con impatti
                  notevoli.
                </td>
              </tr>
              <tr>
                <th>Detailed description</th>
                <td>
                  È stato possibile identificare una vulnerabilità di tipo "Vulnerable and Outdated Components". Nel
                  dettaglio, è stato possibile identificare l'utilizzo del server "Apache Tomcat" affetto da molteplici
                  vulnerabilità note. Per maggiori dettagli sulle vulnerabilità fare riferimento alla sezione Referenze.
                </td>
              </tr>
              <tr>
                <th>CVSS score</th>
                <td>9.8</td>
              </tr>
              <tr>
                <th>CVSS vector</th>
                <td>AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H</td>
              </tr>
              <tr>
                <th>Impact</th>
                <td>
                  Un attaccante non autenticato, utilizzando un vettore di tipo "Network", è potenzialmente in grado di
                  effettuare attacchi di complessità bassa con conseguente impatto alto su confidenzialità, integrità e
                  disponibilità. Gli attacchi non richiedono l'interazione dell'utente e un attacco ben riuscito non può
                  portare a un cambio di scope.
                </td>
              </tr>
              <tr>
                <th>Remediation</th>
                <td>Si consiglia di aggiornare Apache Tomcat all'ultima versione disponibile.</td>
              </tr>
              <tr>
                <th>References</th>
                <td>https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/</td>
              </tr>
            </tbody>
          </table>
        </CardBox>
        <CardBox>
          <CardBoxComponentTitle title="Proof of Concept"></CardBoxComponentTitle>
          <div className="space-y-3">
            <p>PoC 1</p>
            <p>PoC 2</p>
          </div>
        </CardBox>
      </SectionMain>
    </>
  );
};

VulnDetailPage.getLayout = function getLayout(page: ReactElement) {
  return <LayoutAuthenticated>{page}</LayoutAuthenticated>;
};

export default VulnDetailPage;
