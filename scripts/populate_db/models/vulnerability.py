from dataclasses import dataclass, field
from typing import List, Tuple

import utils.utils as utils
from models.assessment import Assessment
from models.base import Base


@dataclass
class Vulnerability(Base):
    category_id: str
    target_id: str
    assessment_id: str
    assessment: Assessment

    detailed_title: str = field(default_factory=lambda: utils.rand_string(120))
    cvssv2: str = ""
    cvssv3: str = ""
    cvssv31: str = ""
    cvss4: str = ""
    references: List[str] = field(default_factory=list)
    generic_description: bool = True
    generic_remediation: bool = True
    description: str = field(default_factory=lambda: utils.rand_string(120))
    remediation: str = field(default_factory=lambda: utils.rand_string(50))

    def __post_init__(self):
        if self.assessment:
            for version in self.assessment.cvss_versions:
                cvss = utils.rand_cvss(version)
                if version == "2.0":
                    self.cvssv2 = cvss
                elif version == "3.0":
                    self.cvssv3 = cvss
                elif version == "3.1":
                    self.cvssv31 = cvss
                elif version == "4.0":
                    self.cvss4 = cvss

    def add(self) -> Tuple[str, str]:
        data = {
            "category_id": self.category_id,
            "target_id": self.target_id,
            "assessment_id": self.assessment_id,
            "detailed_title": self.detailed_title,
            "cvssv2_vector": self.cvssv2,
            "cvssv3_vector": self.cvssv3,
            "cvssv31_vector": self.cvssv31,
            "cvssv4_vector": self.cvss4,
            "references": self.references,
            "generic_description": self.generic_description,
            "generic_remediation": self.generic_remediation,
            "description": self.description,
            "remediation": self.remediation,
        }
        response = self.session.post(self.base_url + "/vulnerabilities", json=data)
        json_response = response.json()
        if response.status_code == 201:
            self.id = json_response.get("vulnerability_id")
            return self.id, ""
        return "", json_response.get("error")
