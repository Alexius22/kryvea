import{_ as i,c as a,o as e,ah as n}from"./chunks/framework.Du42VF1p.js";const g=JSON.parse('{"title":"Troubleshooting Guide","description":"","frontmatter":{},"headers":[],"relativePath":"troubleshooting.md","filePath":"troubleshooting.md"}'),t={name:"troubleshooting.md"};function l(r,s,h,p,o,k){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="troubleshooting-guide" tabindex="-1">Troubleshooting Guide <a class="header-anchor" href="#troubleshooting-guide" aria-label="Permalink to “Troubleshooting Guide”">​</a></h1><p>Common issues and solutions for Kryvea.</p><h2 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to “Table of Contents”">​</a></h2><ul><li><a href="#installation-issues">Installation Issues</a></li><li><a href="#database-issues">Database Issues</a></li><li><a href="#import-export-issues">Import/Export Issues</a></li><li><a href="#performance-issues">Performance Issues</a></li></ul><h2 id="installation-issues" tabindex="-1">Installation Issues <a class="header-anchor" href="#installation-issues" aria-label="Permalink to “Installation Issues”">​</a></h2><h3 id="port-already-in-use" tabindex="-1">Port Already in Use <a class="header-anchor" href="#port-already-in-use" aria-label="Permalink to “Port Already in Use”">​</a></h3><p><strong>Error:</strong> <code>Error starting userland proxy: listen tcp 0.0.0.0:443: bind: address already in use</code></p><p><strong>Solution:</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check what&#39;s using port 443</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ss</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -tulpn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 443</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Option 1: Stop the service (likely apache2 or nginx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Option 2: Change Kryvea port</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Edit docker-compose.yml:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ports:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1337:443&quot;</span></span></code></pre></div><h3 id="docker-build-fails" tabindex="-1">Docker Build Fails <a class="header-anchor" href="#docker-build-fails" aria-label="Permalink to “Docker Build Fails”">​</a></h3><p><strong>Error:</strong> Build errors during <code>docker compose up</code></p><p><strong>Solution:</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Clear build cache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-cache</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Pull fresh images</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Remove old containers</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span></span></code></pre></div><h3 id="ssl-certificate-warnings" tabindex="-1">SSL Certificate Warnings <a class="header-anchor" href="#ssl-certificate-warnings" aria-label="Permalink to “SSL Certificate Warnings”">​</a></h3><p><strong>Issue:</strong> Browser shows &quot;Not Secure&quot; warning</p><p><strong>Solution (Development):</strong></p><ul><li>Accept the self-signed certificate warning</li><li>Add exception in browser</li></ul><p><strong>Solution (Production):</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Use Let&#39;s Encrypt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">certbot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> certonly</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --standalone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your-domain.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Update docker-compose.yml with proper certs</span></span></code></pre></div><h2 id="database-issues" tabindex="-1">Database Issues <a class="header-anchor" href="#database-issues" aria-label="Permalink to “Database Issues”">​</a></h2><h3 id="mongodb-replica-set-errors" tabindex="-1">MongoDB Replica Set Errors <a class="header-anchor" href="#mongodb-replica-set-errors" aria-label="Permalink to “MongoDB Replica Set Errors”">​</a></h3><p><strong>Error:</strong> <code>MongoError: No replica set members match selector</code></p><p><strong>Solution:</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Remove data and restart</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Wait 30 seconds for initialization</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db-init</span></span></code></pre></div><h2 id="import-export-issues" tabindex="-1">Import/Export Issues <a class="header-anchor" href="#import-export-issues" aria-label="Permalink to “Import/Export Issues”">​</a></h2><h3 id="burp-import-fails" tabindex="-1">Burp Import Fails <a class="header-anchor" href="#burp-import-fails" aria-label="Permalink to “Burp Import Fails”">​</a></h3><p><strong>Error:</strong> <code>Failed to parse Burp Suite XML</code></p><p><strong>Solutions:</strong></p><ul><li>Ensure XML format (not HTML)</li><li>Use Burp Suite Pro scanner output</li><li>Check file size limit (default 1GB)</li></ul><h3 id="nessus-import-fails" tabindex="-1">Nessus Import Fails <a class="header-anchor" href="#nessus-import-fails" aria-label="Permalink to “Nessus Import Fails”">​</a></h3><p><strong>Error:</strong> <code>Invalid Nessus file format</code></p><p><strong>Solutions:</strong></p><ul><li>Export as <code>.nessus</code> format (not CSV or PDF)</li><li>Use Nessus Professional/Essentials output</li><li>Verify file is not corrupted</li></ul><h3 id="report-generation-fails" tabindex="-1">Report Generation Fails <a class="header-anchor" href="#report-generation-fails" aria-label="Permalink to “Report Generation Fails”">​</a></h3><p><strong>Error:</strong> <code>Template execution error</code></p><p><strong>Solutions:</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check logs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kryvea-app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Common issues:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Invalid template syntax</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. Missing template variables</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. Corrupted DOCX file</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test with default template first</span></span></code></pre></div><h3 id="large-file-upload-fails" tabindex="-1">Large File Upload Fails <a class="header-anchor" href="#large-file-upload-fails" aria-label="Permalink to “Large File Upload Fails”">​</a></h3><p><strong>Error:</strong> <code>Request entity too large</code></p><p><strong>Solution:</strong> Edit <code>app/internal/engine/engine.go</code>:</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BodyLimit: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Increase to 2GB</span></span></code></pre></div><p>And Nginx config:</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">client_max_body_size </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2000M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="support-channels" tabindex="-1">Support Channels <a class="header-anchor" href="#support-channels" aria-label="Permalink to “Support Channels”">​</a></h3><ul><li><strong><a href="https://github.com/Alexius22/kryvea/discussions" target="_blank" rel="noreferrer">GitHub Discussions</a></strong> - Ask questions</li><li><strong><a href="https://github.com/Alexius22/kryvea/issues" target="_blank" rel="noreferrer">GitHub Issues</a></strong> - Report bugs</li><li><strong><a href="/kryvea/index">Documentation</a></strong> - Check other guides</li></ul><hr><p>See also: <strong><a href="/kryvea/installation">Installation</a></strong> | <strong><a href="/kryvea/configuration">Configuration</a></strong> | <strong><a href="/kryvea/usage">Usage Guide</a></strong></p>`,47)])])}const c=i(t,[["render",l]]);export{g as __pageData,c as default};
