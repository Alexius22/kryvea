import { mdiTabSearch } from "@mdi/js";
import { useEffect, useState } from "react";
import { Link } from "react-router";
import { getData } from "../api/api";
import PageHeader from "../components/Composition/PageHeader";
import Table from "../components/Composition/Table";
import { Vulnerability } from "../types/common.types";
import { formatDate } from "../utils/dates";
import { getPageTitle } from "../utils/helpers";

export default function VulnerabilitySearch() {
  const [vulnerabilities, setVulnerabilities] = useState<Vulnerability[]>([]);
  const [loadingVulnerabilities, setLoadingVulnerabilities] = useState(true);

  useEffect(() => {
    document.title = getPageTitle("Vulnerability Search");
    getData<Vulnerability[]>("/api/vulnerabilities/search?query=", setVulnerabilities, undefined, () =>
      setLoadingVulnerabilities(false)
    );
  }, []);

  return (
    <div>
      <PageHeader icon={mdiTabSearch} title="Vulnerability Search" />
      <Table
        loading={loadingVulnerabilities}
        data={vulnerabilities?.map(vulnerability => ({
          Vulnerability: (
            <Link
              to={`/customers/${vulnerability.target.customer.id}/assessments/${vulnerability.assessment.id}/vulnerabilities/${vulnerability.id}`}
              title={`${vulnerability.category.index} - ${vulnerability.category.name} (${vulnerability.detailed_title})`}
            >
              {`${vulnerability.category.index} - ${vulnerability.category.name} (${vulnerability.detailed_title})`}
            </Link>
          ),
          Description: vulnerability.description,
          "CVSSv3.1 Score": vulnerability.cvssv31.cvss_score,
          "CVSSv4.0 Score": vulnerability.cvssv4.cvss_score,
          Assessment: (
            <Link
              to={`/customers/${vulnerability.target.customer.id}/assessments/${vulnerability.assessment.id}/vulnerabilities`}
              title={vulnerability.assessment.name}
            >
              {vulnerability.assessment.name}
            </Link>
          ),
          "Last update": formatDate(vulnerability.updated_at),
          User: vulnerability.user.username,
        }))}
        perPageCustom={5}
        maxWidthColumns={{ Vulnerability: "30rem", Description: "20rem", Assessment: "20rem" }}
      />
    </div>
  );
}
