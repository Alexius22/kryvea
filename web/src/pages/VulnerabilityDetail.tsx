import { mdiFileEdit } from "@mdi/js";
import { useEffect } from "react";
import { useNavigate, useParams } from "react-router";
import Button from "../components/Button";
import CardBox from "../components/CardBox";
import CardBoxComponentTitle from "../components/CardBox/Component/Title";
import SectionTitleLineWithButton from "../components/Section/TitleLineWithButton";
import { getPageTitle } from "../config";
import { vulnerabilities } from "../mockup_data/vulnerabilities";

const vulnerability = vulnerabilities[0];

const VulnerabilityDetail = () => {
  const navigate = useNavigate();
  const { id } = useParams<{ id: string }>();
  //const { data: vulnerability, loading, error } = useFetch<Vulnerability>(`/api/vulnerability/${id}`);
  const loading = false;
  const error = false;

  useEffect(() => {
    document.title = getPageTitle("Vulnerability detail");
  }, []);
  return (
    <div>
      <SectionTitleLineWithButton icon={undefined} title={vulnerability.detailed_title} main>
        <Button
          icon={mdiFileEdit}
          label="Edit PoC"
          roundedFull
          small
          color="contrast"
          onClick={() => navigate("/edit_poc")}
        />
      </SectionTitleLineWithButton>

      <CardBox className="mb-6 flex" noPadding>
        {loading ? (
          <p>Loading...</p>
        ) : error ? (
          <p>Error: {error}</p>
        ) : (
          <table className="table-fixed">
            <thead>
              <tr>
                <th className="text-center">Severity</th>
                <th className="text-center">Host</th>
                <th className="text-center">User</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td className="text-center">{vulnerability.cvss_severity}</td>
                <td className="text-center">{vulnerability.target.ip + " - " + vulnerability.target.hostname}</td>
                <td className="text-center">{vulnerability.user.username}</td>
              </tr>
            </tbody>
          </table>
        )}
      </CardBox>

      <CardBox className="mb-6 flex" noPadding>
        {loading ? (
          <p>Loading...</p>
        ) : error ? (
          <p>Error: {error}</p>
        ) : (
          <table className="table-auto">
            <tbody>
              <tr>
                <th>Generic description</th>
                <td>{vulnerability.generic_description.text}</td>
              </tr>
              <tr>
                <th>Detailed description</th>
                <td>{vulnerability.description}</td>
              </tr>
              <tr>
                <th>CVSS score</th>
                <td>{vulnerability.cvss_score}</td>
              </tr>
              <tr>
                <th>CVSS vector</th>
                <td>{vulnerability.cvss_vector}</td>
              </tr>
              <tr>
                <th>CVSS Description</th>
                <td>{vulnerability.cvss_description}</td>
              </tr>
              <tr>
                <th>Remediation</th>
                <td>{vulnerability.generic_remediation.text}</td>
              </tr>
              <tr>
                <th>References</th>
                <td>
                  {" "}
                  <ul>
                    {vulnerability.references.map((reference, index) => (
                      <li key={index}>{reference}</li>
                    ))}
                  </ul>
                </td>
              </tr>
            </tbody>
          </table>
        )}
      </CardBox>
      <CardBox>
        <CardBoxComponentTitle title="Proof of Concept"></CardBoxComponentTitle>
        <div className="space-y-3">
          <p>PoC 1</p>
          <p>PoC 2</p>
        </div>
      </CardBox>
    </div>
  );
};

export default VulnerabilityDetail;
