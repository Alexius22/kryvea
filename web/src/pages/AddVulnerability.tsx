import { Form, Formik } from "formik";
import { useEffect, useState } from "react";
import genericVulnerabilities from "../../../app/data/generic_vulnerabilities.json";
import Card from "../components/CardBox/Card";
import Grid from "../components/Composition/Grid";
import CVSS31Wrapper from "../components/CVSS/CVSS31Wrapper/CVSS31Wrapper";
import CVSS40Wrapper from "../components/CVSS/CVSS40Wrapper/CVSS40Wrapper";
import Divider from "../components/Divider";
import Button from "../components/Form/Button";
import Buttons from "../components/Form/Buttons";
import Checkbox from "../components/Form/Checkbox";
import Input from "../components/Form/Input";
import Label from "../components/Form/Label";
import SelectWrapper from "../components/Form/SelectWrapper";
import { SelectOption } from "../components/Form/SelectWrapper.types";
import Textarea from "../components/Form/Textarea";
import { getPageTitle } from "../config";
import { customers } from "../mockup_data/customers";

export default function AddVulnerability() {
  const selectOptions: SelectOption[] = genericVulnerabilities.map(item => ({
    label: `${item.index} - ${item.name}`,
    value: `${item.index} - ${item.name}`,
  }));

  const [vulnerabilitySelectOptions, setVulnerabilitySelectOptions] = useState<SelectOption[]>(selectOptions);
  const [selectedVulnerability, setSelectedVulnerability] = useState<SelectOption | null>(null);

  const [defaultCvssVersions, setDefaultCvssVersions] = useState(customers[2].default_cvss_version);
  const hasCvss3 = defaultCvssVersions.includes("3.1");
  const hasCvss4 = defaultCvssVersions.includes("4.0");

  const [checkedItems, setCheckedItems] = useState({
    gen_desc: true,
    gen_rem: true,
  });

  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { id, checked } = e.target;
    setCheckedItems(prev => ({
      ...prev,
      [id]: checked,
    }));
  };

  useEffect(() => {
    document.title = getPageTitle("Add Vulnerability");
  }, []);

  return (
    <Formik initialValues={{}} onSubmit={undefined}>
      <Form>
        <Card>
          <Grid className="grid-cols-2">
            <SelectWrapper
              label="Vulnerability"
              options={vulnerabilitySelectOptions}
              value={selectedVulnerability}
              onChange={setSelectedVulnerability}
            />
            <Input type="text" id="additional_detail" placeholder="Additional detail" />
            <SelectWrapper
              label="Host"
              id="host-selection"
              options={[
                { value: "127.0.0.1", label: "127.0.0.1" },
                { value: "192.168.1.1", label: "192.168.1.1" },
                { value: "172.0.0.1", label: "172.0.0.1" },
              ]}
              onChange={option => {
                console.log("Selected host:", option.value);
              }}
            />
            <Grid>
              <Label text={"Generic"} />
              <div className="mb-4 flex gap-2">
                <Checkbox id={"gen_desc"} onChange={handleCheckboxChange} htmlFor={"gen_desc"} label={"Description"} />
                <Checkbox id={"gen_rem"} onChange={handleCheckboxChange} htmlFor={"gen_rem"} label={"Remediation"} />
              </div>
            </Grid>
          </Grid>
          {hasCvss3 && <CVSS31Wrapper />}
          {hasCvss4 && <CVSS40Wrapper />}
          <Divider />
          <Textarea id="description" label="Description" placeholder="Description here" />
          <Textarea id="remediation" label="Remediation" placeholder="Remediation here" />
          <Textarea id="references" label="References" placeholder="Additional references here" />
          <Divider />
          <Buttons>
            <Button text="Submit" onClick={() => {}} />
            <Button type="secondary" text="Cancel" onClick={() => {}} />
          </Buttons>
        </Card>
      </Form>
    </Formik>
  );
}
