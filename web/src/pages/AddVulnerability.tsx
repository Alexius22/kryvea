import { Field, Form, Formik } from "formik";
import { useEffect, useState } from "react";
import Button from "../components/Button";
import Buttons from "../components/Buttons";
import CardBox from "../components/CardBox/CardBox";
import CVSS31Wrapper from "../components/CVSS/CVSS31Wrapper/CVSS31Wrapper";
import CVSS40Wrapper from "../components/CVSS/CVSS40Wrapper/CVSS40Wrapper";
import Divider from "../components/Divider";
import FormCheckRadio from "../components/Form/CheckRadio";
import FormCheckRadioGroup from "../components/Form/CheckRadioGroup";
import FormField from "../components/Form/Field";
import SelectWrapper from "../components/Form/SelectWrapper";
import { SelectOption } from "../components/Form/SelectWrapper.types";
import { getPageTitle } from "../config";
import Input from "../components/Form/Input";
import Grid from "../components/Composition/Grid";

const AddVulnerability = () => {
  const [VulnerabilitySelectOptions, setVulnerabilitySelectOptions] = useState<SelectOption[]>([
    { label: "v2", value: 0 },
    { label: "v3", value: 1 },
    { label: "v4", value: 2 },
  ]);
  const [selectedVulnerabilityOptions, setSelectedVulnerabilityOptions] = useState<SelectOption | SelectOption[]>(null);
  const [isCvss4, setIsCvss4] = useState(false);

  useEffect(() => {
    document.title = getPageTitle("Add Vulnerability");
  }, []);

  return (
    <CardBox>
      <Formik initialValues={{}} onSubmit={undefined}>
        <Form>
          <FormField label="Vulnerability" singleChild>
            <Grid className="grid-flow-col items-end">
              <SelectWrapper
                options={VulnerabilitySelectOptions}
                onChange={selectedOptions => setSelectedVulnerabilityOptions(selectedOptions)}
                defaultValue={{ label: "v2", value: 0 }}
              />
              <Input type="text" placeholder="Additional detail" />
            </Grid>
          </FormField>
          <FormField noHeight>
            <FormField label={["Host", "Generic"]} singleChild>
              <SelectWrapper
                id="host-selection"
                options={[
                  { value: "red", label: "Red" },
                  { value: "green", label: "Green" },
                  { value: "blue", label: "Blue" },
                ]}
                onChange={option => {
                  console.log("Selected host:", option.value);
                }}
              />
            </FormField>
            <FormField label="Generic" isTransparent isBorderless>
              <div>
                <FormCheckRadioGroup>
                  <FormCheckRadio type="switch" label="Description">
                    <Field
                      type="checkbox"
                      name="gen_desc"
                      checked
                      onClick={e => {
                        console.log(e.target.checked);
                      }}
                    />
                  </FormCheckRadio>
                  <FormCheckRadio type="switch" label="Remediation">
                    <Field
                      type="checkbox"
                      name="gen_rem"
                      checked
                      onClick={e => {
                        console.log(e.target.checked);
                      }}
                    />
                  </FormCheckRadio>
                </FormCheckRadioGroup>
              </div>
            </FormField>
          </FormField>
          {!isCvss4 ? <CVSS40Wrapper /> : <CVSS31Wrapper />}
          <Divider />
          <FormField label="Description" hasTextareaHeight>
            <Field name="desc" as="textarea" placeholder="Description here" />
          </FormField>
          <FormField label="Remediation" hasTextareaHeight>
            <Field name="rem" as="textarea" placeholder="Remediation here" />
          </FormField>
          <FormField label="References" hasTextareaHeight>
            <Field name="ref" as="textarea" placeholder="Additional references here" />
          </FormField>
          <Divider />
          <Buttons>
            <Button type="submit" label="Submit" />
            <Button type="reset" outline label="Cancel" />
          </Buttons>
        </Form>
      </Formik>
    </CardBox>
  );
};

export default AddVulnerability;
