import { Form, Formik } from "formik";
import { useEffect, useState } from "react";
import Button from "../components/Button";
import Buttons from "../components/Buttons";
import CardBox from "../components/CardBox/CardBox";
import Grid from "../components/Composition/Grid";
import CVSS31Wrapper from "../components/CVSS/CVSS31Wrapper/CVSS31Wrapper";
import CVSS40Wrapper from "../components/CVSS/CVSS40Wrapper/CVSS40Wrapper";
import Divider from "../components/Divider";
import Input from "../components/Form/Input";
import SelectWrapper from "../components/Form/SelectWrapper";
import { SelectOption } from "../components/Form/SelectWrapper.types";
import { getPageTitle } from "../config";

const AddVulnerability = () => {
  const [VulnerabilitySelectOptions, setVulnerabilitySelectOptions] = useState<SelectOption[]>([
    { label: "v2", value: 0 },
    { label: "v3", value: 1 },
    { label: "v4", value: 2 },
  ]);
  const [selectedVulnerabilityOptions, setSelectedVulnerabilityOptions] = useState<SelectOption | SelectOption[]>(null);
  const [isCvss4, setIsCvss4] = useState(true);

  const [checkedItems, setCheckedItems] = useState({
    gen_desc: true,
    gen_rem: true,
  });

  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { id, checked } = e.target;
    setCheckedItems(prev => ({
      ...prev,
      [id]: checked,
    }));
    console.log(`${id} checked:`, checked);
  };

  useEffect(() => {
    document.title = getPageTitle("Add Vulnerability");
  }, []);

  return (
    <CardBox>
      <Formik initialValues={{}} onSubmit={undefined}>
        <Form>
          <Grid className="grid-cols-2">
            <SelectWrapper
              label="Vulnerability"
              options={VulnerabilitySelectOptions}
              onChange={selectedOptions => setSelectedVulnerabilityOptions(selectedOptions)}
              defaultValue={{ label: "v2", value: 0 }}
            />
            <Input type="text" id="additional_detail" placeholder="Additional detail" />
            <SelectWrapper
              label="Host"
              id="host-selection"
              options={[
                { value: "127.0.0.1", label: "127.0.0.1" },
                { value: "192.168.1.1", label: "192.168.1.1" },
                { value: "172.0.0.1", label: "172.0.0.1" },
              ]}
              onChange={option => {
                console.log("Selected host:", option.value);
              }}
            />
            <div className="grid items-end gap-5">
              <label className="font-bold">Generic</label>
              <div className="mb-4 inline-flex gap-2">
                <input
                  type="checkbox"
                  id="gen_desc"
                  checked={checkedItems.gen_desc}
                  onChange={handleCheckboxChange}
                  className="h-5 w-5 cursor-pointer"
                />
                <label htmlFor="gen_desc" className="cursor-pointer text-sm">
                  Description
                </label>

                <input
                  type="checkbox"
                  id="gen_rem"
                  checked={checkedItems.gen_rem}
                  onChange={handleCheckboxChange}
                  className="h-5 w-5 cursor-pointer"
                />
                <label htmlFor="gen_rem" className="cursor-pointer text-sm">
                  Remediation
                </label>
              </div>
            </div>
          </Grid>
          {!isCvss4 ? <CVSS40Wrapper /> : <CVSS31Wrapper />}
          <Divider />
          <Input type="text" id="description" label="Description" placeholder="Description here" multiline />
          <Input type="text" id="remediation" label="Remediation" placeholder="Remediation here" multiline />
          <Input type="text" id="references" label="References" placeholder="Additional references here" multiline />
          <Divider />
          <Buttons>
            <Button type="submit" label="Submit" />
            <Button type="reset" outline label="Cancel" />
          </Buttons>
        </Form>
      </Formik>
    </CardBox>
  );
};

export default AddVulnerability;
